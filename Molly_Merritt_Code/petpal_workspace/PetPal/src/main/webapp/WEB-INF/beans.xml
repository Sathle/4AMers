<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- Enable annotations in this context -->
	<context:annotation-config />

	<!-- Where to look for annotations -->
	<context:component-scan base-package="com.ex"></context:component-scan>

	<!-- Enable @Transaction -->
	<tx:annotation-driven />

	<!-- Contextual Sessions! Configure Hibernate with Spring -->
	<bean id="myDataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />

		<property name="url"
			value="jdbc:oracle:thin:@petpal.cw8jhojtjofv.us-east-2.rds.amazonaws.com:1521/ORCL" />
		<property name="username" value="sathle" />
		<property name="password" value="happy678" />
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="com.ex" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- HBM@DDL.AUTO OPTIONS:
				validate: validate the schema, makes no changes to the database
				update: update the schema.
				create: creates the schema, destroying previous data.
				create-drop: drop the schema when the
					SessionFacotyr is closed explicitly,
					typically when the application is stopped -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>

		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>

	<context:annotation-config/>
	<context:component-scan base-package="com.rev"/>

	<mvc:annotation-driven/>
	
	<!-- the following is only needed if your controllers will return views -->
	<mvc:resources location="/static" mapping="/**"></mvc:resources>
	
	<!-- View Resolver
	InternalResourceViewResolver
	 -->
	
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="static/"></property>
		<property name="suffix" value=".html"></property>
	
	</bean>
	

</beans>
